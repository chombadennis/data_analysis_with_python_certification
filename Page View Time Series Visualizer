import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from pandas.plotting import register_matplotlib_converters
register_matplotlib_converters()

# Import data (Make sure to parse dates. Consider setting index column to 'date'.)
df = pd.read_csv("fcc-forum-pageviews.csv",
                index_col = [0],
                parse_dates=True
                )

# Clean data
df = df[(df['value'] >= df['value'].quantile(0.0025)) & (df['value'] <= df['value'].quantile(0.975))]

# Draw line plot
def draw_line_plot():
    plt.figure(figsize=(16, 5)),
    plt.plot(df.index, df['value'], c='r'),
    plt.xlabel('Date'),
    plt.ylabel('Page Views'),
    plt.title('Daily freeCodeCamp Forum Page Views 5/2016-12/2019')
 
    # Save image and return fig (don't change this part)
    fig.savefig('line_plot.png')
    return fig

def draw_bar_plot():
    # Copy and modify data for monthly bar plot
    df_bar = df.copy()
    df_bar['ID'] = range(1, len(df_bar) + 1)
    df_bar['date'] = df.index
    df_bar.insert(0, 'ID', df_bar.pop('ID'))
    df_bar.set_index('ID')
    df_bar.insert(1, 'date', df_bar.pop('date'))
    df_bar = df_bar.set_index('ID')
    
    ### Extract year and month from the date column
    df_bar['year'] = [d.year for d in df_bar.date] 
    df_bar['month'] = [d.strftime('%b') for d in df_bar.date]

    ### Calculate average daily page views for each month grouped by year
    monthly_avg = df_bar.groupby(['year', 'month'])['value'].mean().reset_index()
    monthly_avg


    # Draw bar plot
    sns.set_theme(style="darkgrid", color_codes=False, palette='colorblind')
    sns.color_palette("Paired")
    plt.figure(figsize=(10, 6))
    sns.barplot(x='year', y='value', hue='month', data=monthly_avg,)
    plt.xlabel('Years')
    plt.ylabel('Average Page Views')
    plt.title('Average Daily Page Views by Year (2016-2019)')
    plt.xticks(range(4), [2016, 2017, 2018, 2019])
    plt.legend(title='Month', loc='upper left')
    plt.tight_layout()
    plt.show()

    # Save image and return fig (don't change this part)
    fig.savefig('bar_plot.png')
    return fig

def draw_box_plot():
    # Prepare data for box plots (this part is done!)
    df_box = df.copy()
    df_box.reset_index(inplace=True)
    df_box['year'] = [d.year for d in df_box.date]
    df_box['month'] = [d.strftime('%b') for d in df_box.date]

    # Draw box plots (using Seaborn)
    plt.figure(figsize=(12, 6))
    plt.subplot(1, 2, 1)
    sns.boxplot(x='year', y='value', data=df_box)
    plt.title('Year-wise Box Plot (Trend)')
    plt.xlabel('Year')
    plt.ylabel('Page Views')

    plt.subplot(1, 2, 2)
    sns.boxplot(x='month', y='value', data=df_box)
    plt.title('Month-wise Box Plot (Seasonality)')
    plt.xlabel('Month')
    plt.ylabel('Page Views')

    month_names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
    plt.xticks(ticks=range(12), labels=month_names)

    plt.tight_layout()
    plt.show()

    # Save image and return fig (don't change this part)
    fig.savefig('box_plot.png')
    return fig
